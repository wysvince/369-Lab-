    memory[0] <= 32'h34120000 ;		   // 	  ori	$18, $0, 0			   // main      // $18 = 268500992
    memory[1] <= 32'h8E520000 ;        //     lw    $18, 0($18)                         // $18 = 100
    memory[2] <= 32'h34130000 ;        //     ori    $19, $0, 0                         // $19 = ????
    memory[3] <= 32'h8E730004 ;        //     lw    $19, 4($19)                         // $19 = 200
    memory[4] <= 32'h2538820 ;         //     add    $17, $18, $19                      // $17 = 100 + 200  = 300
    memory[5] <= 32'h233422 ;          //     sub    $20, $17, $19                      // $20 = 300 - 200 = 100
    memory[6] <= 32'h2348822 ;         //     sub    $17, $17, $20                      // $17 = 300 - 100 = 200    
    memory[7] <= 32'h7233402 ;         //     mul    $20, $17, $19                      // $20 = 200 * 200 = 40000 
    memory[8] <= 32'h233422 ;          //     sub    $20, $17, $19                      // $20 = 200 - 200 = 0
    memory[9] <= 32'h2538820 ;         //     add    $17, $18, $19                      // $17 = 100 + 200 = 300
    memory[10] <= 32'h7234B002 ;       //     mul    $22, $17, $20                      // $22 = 300 * 0 = 0
    memory[11] <= 32'h2968822 ;        //     sub    $17, $20, $22                      // $17 = 0 - 0 = 0
    memory[12] <= 32'h2568820 ;        //     add    $17, $18, $22                      // $17 = 100 + 0 = 100
    memory[13] <= 32'h3631AAAA ;       //     ori    $17, $17, 43690                    // $17 = 43758
    memory[14] <= 32'h118A80 ;         //     sll    $17, $17, 10                       // $17 = 44808192
    memory[15] <= 32'h22350000 ;       //     addi    $21, $17, 0                       // $21 = 44808192
    memory[16] <= 32'h22B70000 ;       //     addi    $23, $21, 0                       // $23 = 44808192
    memory[17] <= 32'h34120018 ;       //     ori    $18, $0, 24                        // $18 = 
    memory[18] <= 32'h8E510000 ;       //     lw    $17, 0($18)                         // $17 = 700
    memory[19] <= 32'h235422 ;         //     sub    $20, $17, $21                      // $20 = 700 - 44808192 = 4250159804
    memory[20] <= 32'h237B024 ;        //     and    $22, $17, $23                      // $22 = 0
    memory[21] <= 32'h236B825 ;        //     or    $23, $17, $22                       // $23 = 700
    memory[22] <= 32'h2339022 ;        //     sub    $18, $17, $19                      // $18 = 700 - 200 = 500
    memory[23] <= 32'h2554024 ;        //     and    $8, $18, $21                       // $8 = 500 & 44808192 = 0
    memory[24] <= 32'h2D24825 ;        //     or    $9, $22, $18                        // $9 = 500
    memory[25] <= 32'h2525020 ;        //     add    $10, $18, $18                      // $10 = 500+500 = 1000
    memory[26] <= 32'h34110000 ;       //     ori    $17, $0, 0                         // $17 = ??
    memory[27] <= 32'hAE290004 ;       //     sw    $9, 4($17)                          // store word
    memory[28] <= 32'h8E24004 ;        //     lw    $10, 4($17)                         // $10 = 500
    memory[29] <= 32'h2339022 ;        //     sub    $18, $17, $19                      // $18 = ?? - 200 = -200
    memory[30] <= 32'h2555825 ;        //     or    $11, $18, $21                       // $12 = 4294967096 = -200
    memory[31] <= 32'h2526020 ;        //     add    $12, $18, $18                      // $12 = -200 + -200 = -400
    memory[32] <= 32'h2525025 ;        //     or    $10, $18, $18                       // 
    memory[33] <= 32'h2EA420 ;         //     add    $20, $23, $10            
    memory[34] <= 32'h34090000 ;       //     ori    $9, $0, 0            
    memory[35] <= 32'h8D280000 ;       //     lw    $8, 0($9)            
    memory[36] <= 32'h8D24004 ;        //     lw    $10, 4($9)            
    memory[37] <= 32'hAD24000 ;        //     sw    $10, 0($9)            
    memory[38] <= 32'hAD280004 ;       //     sw    $8, 4($9)            
    memory[39] <= 32'h8D280000 ;       //     lw    $8, 0($9)            
    memory[40] <= 32'h8D24004 ;        //     lw    $10, 4($9)            
    memory[41] <= 32'h34040018 ;       //     ori    $4, $0, 24            
    memory[42] <= 32'h800002D ;        //     j    start            
    memory[43] <= 32'h2004FFFF ;       //     addi    $4, $0, -1            
    memory[44] <= 32'h2004FFFF ;       //     addi    $4, $0, -1            
    memory[45] <= 32'h8C900004 ;       //     lw    $16, 4($4)             // start
    memory[46] <= 32'hAC900000 ;       //     sw    $16, 0($4)            
    memory[47] <= 32'h6010003 ;        //     bgez    $16, branch2         // branch1
    memory[48] <= 32'h22100001 ;       //     addi    $16, $16, 1            
    memory[49] <= 32'h601FFFF ;        //     bgez    $16, branch1            
    memory[50] <= 32'h800003E ;        //     j    error            
    memory[51] <= 32'h2010FFFF ;       //     addi    $16, $0, -1          // branch2
    memory[52] <= 32'h6000004 ;        //     bltz    $16, branch3            
    memory[53] <= 32'h20100001 ;       //     addi    $16, $0, 1            
    memory[54] <= 32'h10082A ;         //     slt    $at, $0, $16            
    memory[55] <= 32'h1420FFFD ;       //     bne    $at, $0, branch2            
    memory[56] <= 32'h800003E ;        //     j    error            
    memory[57] <= 32'h6000003 ;        //     bltz    $16, done            // branch3
    memory[58] <= 32'h2010FFFF ;       //     addi    $16, $0, -1            
    memory[59] <= 32'h600FFFF ;        //     bltz    $16, branch3            
    memory[60] <= 32'h800003E ;        //     j    error            
    memory[61] <= 32'h800003D ;        //     j    done                    // done
    memory[62] <= 32'h800003E ;        //     j    error                   // error